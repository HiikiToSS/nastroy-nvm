from aiogram import Bot, Dispatcher, types, F
from aiogram.filters import Command
from aiogram.types import BufferedInputFile, Message

import asyncio
from dotenv import load_dotenv
import os
from datetime import *
load_dotenv()
from photoGenerator import generate_simple_plot


bot = Bot(token=os.getenv("TG_BOT_TOKEN"))
dp = Dispatcher()


async def send_notif():
    target_time = time(3, 16)  # –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–µ–µ –≤—Ä–µ–º—è
    while True:
        now = datetime.now().time()
        if now.hour == target_time.hour and now.minute == target_time.minute:
            await bot.send_message(chat_id=1895572923, text="‚è∞ –í—Ä–µ–º—è –ø—Ä–∏—à–ª–æ!")
            await asyncio.sleep(61)  # —á—Ç–æ–±—ã –Ω–µ —Å–ø–∞–º–∏—Ç—å —Å–ª–∏–ø –Ω–∞ 61 —Å–µ–∫
        await asyncio.sleep(30)  # –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏–µ –∫–∞–∂–¥—ã–µ 10 —Å–µ–∫

@dp.message(Command("start"))
async def send_welcome(message: Message):
    await message.answer(
        "üìà –ë–æ—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≥—Ä–∞—Ñ–∏–∫–æ–≤\n"
        "–û—Ç–ø—Ä–∞–≤—å—Ç–µ /graph —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –≥—Ä–∞—Ñ–∏–∫"
    )

@dp.message(Command("graph"))
async def send_graph(message: Message):
    plot = generate_simple_plot()
    image = BufferedInputFile(plot.getvalue(), filename="graph.png")
    await message.answer_photo(image, caption="–ì—Ä–∞—Ñ–∏–∫ –¥–∞–Ω–Ω—ã—Ö (—à–∫–∞–ª–∞ 0-15)")


#–ù–ò–ñ–ï –í–°–ï–• –î–†–£–ì–ò–• –û–ë–†–ê–ë–¢–ß–ò–ö–û–í
@dp.message(F.text)
async def handle_hello(message: Message):
    await message.answer("–ù–µ —Ö–æ—á—É —Ç—ã–∫–∞—Ç—å –ø–∞–ª—å—Ü–µ–º, –Ω–æ:\n - –ª–∏–±–æ –∫–æ–º—É-—Ç–æ –≤–ø–∞–¥–ª—É –Ω–∞–∂–∞—Ç—å /start\n  –ª–∏–±–æ –∫—Ç–æ-—Ç–æ –ø—Ä–∏–¥—É—Ä–æ–∫")
    # users.insert_one(message.text)

async def main():
    asyncio.create_task(send_notif())
    await dp.start_polling(bot)

if __name__ == '__main__':
    asyncio.run(main())