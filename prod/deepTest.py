import matplotlib.pyplot as plt
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from aiogram.types import BufferedInputFile
from io import BytesIO
import asyncio
from dotenv import load_dotenv
import os
load_dotenv()

# –í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ (–¥–µ–Ω—å -> –∑–Ω–∞—á–µ–Ω–∏–µ)
data = {
    "–î–µ–Ω—å": [1, 2, 3, 4, 5],
    "–ó–Ω–∞—á–µ–Ω–∏–µ": [9, 14, 7, 8, 12]
}

bot = Bot(token=os.getenv("TG_BOT_TOKEN"))
dp = Dispatcher()

def generate_simple_plot():
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –ª–∏–Ω–µ–π–Ω—ã–π –≥—Ä–∞—Ñ–∏–∫ —Å —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –æ—Å—è–º–∏"""
    plt.figure(figsize=(8, 5))
    
    # –°–æ–∑–¥–∞—ë–º –≥—Ä–∞—Ñ–∏–∫
    plt.plot(data["–î–µ–Ω—å"], data["–ó–Ω–∞—á–µ–Ω–∏–µ"], 
             marker='o', 
             color='blue',
             linestyle='-',
             linewidth=2)
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ—Å–µ–π
    plt.ylim(0, 15)  # –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –¥–∏–∞–ø–∞–∑–æ–Ω –æ—Ç 0 –¥–æ 15
    plt.xlim(min(data["–î–µ–Ω—å"]) - 0.5, max(data["–î–µ–Ω—å"]) + 0.5)  # –ù–µ–±–æ–ª—å—à–∏–µ –æ—Ç—Å—Ç—É–ø—ã –ø–æ X
    
    # –ü–æ–¥–ø–∏—Å–∏ –∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ
    plt.title("–ì—Ä–∞—Ñ–∏–∫ –¥–∞–Ω–Ω—ã—Ö (—à–∫–∞–ª–∞ 0-15)", pad=20)
    plt.xlabel("–î–µ–Ω—å", labelpad=10)
    plt.ylabel("–ó–Ω–∞—á–µ–Ω–∏–µ", labelpad=10)
    plt.grid(True, linestyle='--', alpha=0.7)
    
    # –î–æ–±–∞–≤–ª—è–µ–º –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã–µ –ª–∏–Ω–∏–∏ –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞
    for y in range(0, 16, 5):  # –õ–∏–Ω–∏–∏ —á–µ—Ä–µ–∑ –∫–∞–∂–¥—ã–µ 5 –µ–¥–∏–Ω–∏—Ü
        plt.axhline(y=y, color='gray', linestyle=':', alpha=0.3)
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –±—É—Ñ–µ—Ä
    buf = BytesIO()
    plt.savefig(buf, format='png', dpi=120, bbox_inches='tight')
    buf.seek(0)
    plt.close()
    return buf

@dp.message(Command("start"))
async def send_welcome(message: types.Message):
    await message.answer(
        "üìà –ë–æ—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≥—Ä–∞—Ñ–∏–∫–æ–≤\n"
        "–û—Ç–ø—Ä–∞–≤—å—Ç–µ /graph —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –≥—Ä–∞—Ñ–∏–∫ —Å —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —à–∫–∞–ª–æ–π (0-15)"
    )

@dp.message(Command("graph"))
async def send_graph(message: types.Message):
    plot = generate_simple_plot()
    image = BufferedInputFile(plot.getvalue(), filename="graph.png")
    await message.answer_photo(image, caption="–ì—Ä–∞—Ñ–∏–∫ –¥–∞–Ω–Ω—ã—Ö (—à–∫–∞–ª–∞ 0-15)")

async def main():
    await dp.start_polling(bot)

if __name__ == '__main__':
    asyncio.run(main())